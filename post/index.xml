<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 懐石温泉旅館まげわ</title>
    <link>http://localhost:1313/post/</link>
    <description>Recent content in Posts on 懐石温泉旅館まげわ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    
    
    
    <lastBuildDate>Tue, 17 Feb 2015 07:23:09 JST</lastBuildDate>
    <atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>hugoでgithubにpushするまでの手順</title>
      <link>http://localhost:1313/post/2015-02/hugo-github-procedure/</link>
      <pubDate>Tue, 17 Feb 2015 07:23:09 JST</pubDate>
      
      <guid>http://localhost:1313/post/2015-02/hugo-github-procedure/</guid>
      <description>

&lt;h2 id=&#34;新規作成:e3cc5420968c78ceebb16451f13e4a39&#34;&gt;新規作成&lt;/h2&gt;

&lt;p&gt;blog自体と同じく、新しいページはhugo newで作れます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hugo new hogehoge.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;hogehogeに指定したファイル名でヘッダつきのファイルが作成されます。
上の例では&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;BLOG_TOP/content/hogehoge.md 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;が生成されます。
hogehogeをパスから書くと、content配下に勝手にディレクトリが作られて&lt;br /&gt;
テキトウにエントリをディレクトリで分類できるようになっています。
ふだんはcontent/postのしたに切っておくといいようです。&lt;/p&gt;

&lt;p&gt;2015年02月現在、ここで日本語のタイトルを指定すると&lt;br /&gt;
面倒な感じになるのでここではアルファベットにしておくといいみたいです。&lt;/p&gt;

&lt;p&gt;postしたエントリはdateに指定した日付で&lt;br /&gt;
勝手に時系列として処理されるようです。&lt;br /&gt;
変えることができるのか気が向いたら調べます。&lt;/p&gt;

&lt;h2 id=&#34;ヘッダ:e3cc5420968c78ceebb16451f13e4a39&#34;&gt;ヘッダ&lt;/h2&gt;

&lt;p&gt;作成したファイルはこんなことが書いてあるテキストファイルです。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;+++  
date = &amp;quot;2015-02-17T07:23:09+09:00&amp;quot;  
draft = true  
title = &amp;quot;hogehoge&amp;quot;  

+++
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;titleを日本語にしたい時にはここでtitle=を書き換えます。&lt;br /&gt;
また、ファイル名をslug=で追加しておきます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;title = &amp;quot;ほげほげ&amp;quot;  
slug = &amp;quot;hogehoge&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;あとは+++以下にmarkdownで本文を書きます。&lt;/p&gt;

&lt;h2 id=&#34;プレビュー:e3cc5420968c78ceebb16451f13e4a39&#34;&gt;プレビュー&lt;/h2&gt;

&lt;p&gt;生成は&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;でもできます。オプションでテーマを選んだりします。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hugo server --buildDrafts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とすると、contentsのしたに置いたファイルを&lt;br /&gt;
テキトウにやったあれこれをよきに計らってレンダリングしたうえで&lt;br /&gt;
localhost:1313 でサーバが起動して、ブラウザで見えるようになります。&lt;/p&gt;

&lt;p&gt;私は普段&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hugo server --theme=&amp;quot;purehugo&amp;quot; --buildDrafts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と実行しています。&lt;/p&gt;

&lt;h2 id=&#34;修正:e3cc5420968c78ceebb16451f13e4a39&#34;&gt;修正&lt;/h2&gt;

&lt;p&gt;hugo はbaseurlの挙動にやや不安定なところがあって、&lt;br /&gt;
config.tomlとかで指定しても&amp;ndash;baseUrl=&amp;ldquo;&amp;ldquo;で指定しても&lt;br /&gt;
色々と気に食わない動きをします。&lt;/p&gt;

&lt;p&gt;探すとあちこちで文句いってる人が見つかりますが&lt;br /&gt;
今のところ解決した様子はなく、&lt;br /&gt;
ソース追っかけるのはあとにして生成されたファイルを置換して対処します。
publicの下で&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ find . -type f -name &#39;*.html&#39; -exec sed -i &amp;quot;&amp;quot; -e &#39;s/http:\/\/localhost:1313/https:\/\/hoge\.github\.io/g&#39; {} \;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;を実行すると &lt;a href=&#34;http://localhost:1313&#34;&gt;http://localhost:1313&lt;/a&gt; を &lt;a href=&#34;https://hoge.github.io&#34;&gt;https://hoge.github.io&lt;/a&gt; に置換してくれます。&lt;/p&gt;

&lt;h2 id=&#34;commit-とpush:e3cc5420968c78ceebb16451f13e4a39&#34;&gt;commit とpush&lt;/h2&gt;

&lt;p&gt;あとはpublicの下で更新したファイルをcommitしてpushするだけです。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git add -A  
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;あらかじめ自分の hoge.github.io を public のしたに clone しておくと便利です。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo 始めました</title>
      <link>http://localhost:1313/post/my-first-hugo/</link>
      <pubDate>Sun, 15 Feb 2015 22:08:32 JST</pubDate>
      
      <guid>http://localhost:1313/post/my-first-hugo/</guid>
      <description>&lt;p&gt;github.io用にoctpressで少しだけ書いておりました。&lt;br /&gt;
このたび新しくPC環境を作り、BeagleBoneBlackも手元に来たことだしと&lt;br /&gt;
いろいろ手を加えたところ、わけわからんテンプレートを見事に破壊してしまい&lt;br /&gt;
ロールバックしないと記事の投稿も無視されるようになってしまいました。&lt;/p&gt;

&lt;p&gt;そんなに書き溜めている分もないので、&lt;br /&gt;
巨大すぎて何してるのかよくわからん環境を放置して &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; に移ってきました。&lt;br /&gt;
golang 大好きとかもありますけどこう、&lt;br /&gt;
ソフトウェアが何やってるのかはっきりわかるのはとても良いように思います。&lt;br /&gt;
見よう見真似でいじくりまわすと見た目はともかく&lt;br /&gt;
いじくった場所が変わるので大変わかりやすいです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new post/mynewentry.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とかやって新しいファイルをつくって&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo  server --buildDrafts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とかするとhtmlを生成してくれるので、それをそのままgithubにpushするだけです。&lt;br /&gt;
octpressと比べるとデプロイのところが自動になってないのが面倒かもしれませんが&lt;br /&gt;
gitだしそのうちシェルスクリプトにでもしようかなと。&lt;/p&gt;

&lt;p&gt;ぼちぼちいきますのでよろしくお願いいたします。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>